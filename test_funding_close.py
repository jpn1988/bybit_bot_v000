#!/usr/bin/env python3
"""
Script de test pour diagnostiquer les probl√®mes de fermeture apr√®s funding.
"""

import sys
import os
import time
import asyncio

# Ajouter le r√©pertoire src au path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from bot import BotOrchestrator
from logging_setup import setup_logging

async def test_funding_close():
    """Test de la fermeture automatique apr√®s funding."""
    logger = setup_logging()
    logger.info("üß™ D√©marrage du test de fermeture apr√®s funding")
    
    try:
        # Cr√©er l'orchestrateur
        orchestrator = BotOrchestrator()
        
        # Attendre un peu pour l'initialisation
        await asyncio.sleep(2)
        
        # V√©rifier que le FundingCloseManager est initialis√©
        if orchestrator.funding_close_manager:
            logger.info("‚úÖ FundingCloseManager initialis√©")
            
            # Tester avec un symbole fictif
            test_symbol = "BTCUSDT"
            orchestrator.funding_close_manager.add_position_to_monitor(test_symbol)
            
            # Attendre un peu
            await asyncio.sleep(1)
            
            # Tester la d√©tection de funding
            orchestrator.funding_close_manager.test_funding_detection(test_symbol)
            
            # Afficher le statut
            monitored = orchestrator.funding_close_manager.get_monitored_positions()
            logger.info(f"üìä Positions surveill√©es: {monitored}")
            
        else:
            logger.error("‚ùå FundingCloseManager non initialis√©")
            
        # V√©rifier le PositionMonitor
        if orchestrator.position_monitor:
            logger.info("‚úÖ PositionMonitor initialis√©")
            logger.info(f"üìä PositionMonitor running: {orchestrator.position_monitor.is_running()}")
        else:
            logger.error("‚ùå PositionMonitor non initialis√©")
            
        # V√©rifier le PositionEventHandler
        if orchestrator._position_event_handler:
            logger.info("‚úÖ PositionEventHandler initialis√©")
            if hasattr(orchestrator._position_event_handler, 'funding_close_manager'):
                logger.info("‚úÖ PositionEventHandler a le FundingCloseManager")
            else:
                logger.error("‚ùå PositionEventHandler n'a pas le FundingCloseManager")
        else:
            logger.error("‚ùå PositionEventHandler non initialis√©")
            
    except Exception as e:
        logger.error(f"‚ùå Erreur lors du test: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_funding_close())
